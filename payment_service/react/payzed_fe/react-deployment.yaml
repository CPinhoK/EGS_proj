# Create App deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: preact
  namespace: zppinho
spec:
  replicas: 1
  selector:
    matchLabels:
      app: preact
  template:
    metadata:
      labels:
        app: preact
    spec:
      containers:
      - name: preact
        image: registry.deti:5000/zppinho/preact:latest
        imagePullPolicy: Always
        resources: {}
        volumeMounts:
          - name: nginx-static
            mountPath: /var/www/static
          - name: nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
        ports:
          - containerPort: 80
      restartPolicy: Always
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
               - key: nginx.conf
                 path: nginx.conf
        - name: nginx-static
          persistentVolumeClaim:
            claimName: zppinho-nginx-pvc

# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: preact
  namespace: zppinho
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: preact


# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: preact-k3s
  namespace: zppinho
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: zppinho-midheader@kubernetescrd
    # traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    # traefik.ingress.kubernetes.io/redirect-entry-point: http
    # ingress.kubernetes.io/redirect-permanent: "true"
    # ingress.kubernetes.io/enable-cors: "true"
    # traefik.ingress.kubernetes.io/enable-cors: "true"
    # traefik.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    # traefik.ingress.kubernetes.io/cors-allow-origin: "*"
    # traefik.ingress.kubernetes.io/cors-allow-credentials: "true"
    ingress.kubernetes.io/whitelist-x-forwarded-for: "true" 
    traefik.ingress.kubernetes.io/custom-request-headers: "Access-Control-Allow-Origin:*||auth:* *||Access-Control-Allow-Methods:GET,PUT,DELETE,POST,OPTIONS"
    traefik.ingress.kubernetes.io/custom-response-headers: "Access-Control-Allow-Origin:*||Access-Control-Allow-Methods:GET,PUT,DELETE,POST,OPTIONS||Access-Control-Allow-Headers:auth,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range||Access-Control-Expose-Headers:Content-Length,Content-Range||auth:* *"
spec:
  rules:
  - host: zppinho-preact.egs
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: preact
            port: 
              number: 80


---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: midheader
  namespace: zppinho
spec:
  headers:
    accessControlAllowMethods:
      - "GET"
      - "OPTIONS"
      - "PUT"
      - "POST"
      - "DELETE"
    accessControlAllowOriginList: 
      - "*"
    accessControlMaxAge: 100
    addVaryHeader: true
    accessControlAllowHeaders: 
      - "*"
    accessControlExposeHeaders: 
      - "*"
    contentTypeNosniff: true
      


#NGINX Config map
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: zppinho
data:
  nginx.conf: |
    worker_processes 4;

    events { worker_connections 1024; }

    http {
        server {
            add_header Access-Control-Allow-Origin *;
            listen 80;
            root  /usr/share/nginx/html;
            include /etc/nginx/mime.types;

            location / {
               if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    #
                    # Custom headers and headers various browsers *should* be OK with but aren't
                    #
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                    #
                    # Tell client that this pre-flight info is valid for 20 days
                    #
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain; charset=utf-8';
                    add_header 'Content-Length' 0;
                    return 204;
                }
                if ($request_method = 'POST') {
                    add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }
                if ($request_method = 'GET') {
                    add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                }

            }
            location /params {
                try_files $uri /index.html;
            }
        }
    }
